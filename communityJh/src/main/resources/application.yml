# server port
server:
  port: 8000

# build profile setting
#spring.profiles.active=@activatedProperties@


# 운영환경 config
---
spring:
  profiles:
    active: '@activatedProperties@'

    
#  datasource:
#    driver-class-name: oracle.jdbc.OracleDriver
#    jdbc-url: jdbc:oracle:thin:@localhost:1521:XE
#    username: zaritalk
#    password: tapaman
---

# 개발환경 config
spring:
  profiles:
    active: '@activatedProperties@'
  
  jpa: #jpa
    hibernate:
      ddl-auto: update
    generate-ddl: true
    show-sql: true
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
#    database: oracle
#    database-platform: org.hibernate.dialect.OracleDialect
    properties:
      hibernate.format_sql: true
      
  mvc:
    pathmatch:
      matching-strategy: ANT_PATH_MATCHER
      
  # db
  datasource:
#    driver-class-name: oracle.jdbc.OracleDriver
#    jdbc-url: jdbc:oracle:thin:@localhost:1521:XE
#    username: zaritalk
#    password: tapaman
    driver-class-name: org.postgresql.Driver
    jdbc-url: jdbc:postgresql://localhost:5432/community
    username: postgres
    password: zx159463


# thymeleaf config
thymeleaf:
  cache: false
  prefix: classpath:/templates/
  suffix: .html
  mode: html
  encoding: UTF-8

logging:
  level:
    root: info
  config: classpath:log4j2.xml 

#jwt
jwt:
  header:
  secret:

